from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_core.runnables.history import RunnableWithMessageHistory
from langchain.memory import ChatMessageHistory

# 1. Initialize model
llm = ChatOpenAI(model="gpt-3.5-turbo", temperature=0.7)

# 2. Create a prompt with memory placeholder
prompt = ChatPromptTemplate.from_messages([
    ("system", "You are a helpful chatbot."),
    MessagesPlaceholder(variable_name="history"),
    ("human", "{input}")
])

# 3. Bind model with prompt
chain = prompt | llm

# 4. Add conversation history
store = {}
def get_history(session_id: str):
    if session_id not in store:
        store[session_id] = ChatMessageHistory()
    return store[session_id]

chatbot = RunnableWithMessageHistory(
    chain,
    get_history,
    input_messages_key="input",
    history_messages_key="history"
)

# 5. Test chatbot
config = {"configurable": {"session_id": "user1"}}
while True:
    query = input("You: ")
    if query.lower() in ["exit", "quit"]:
        break
    response = chatbot.invoke({"input": query}, config=config)
    print("Bot:", response.content)
streamlit
langchain-community
faiss-cpu
sentence-transformers
transformers
